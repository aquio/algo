// Binary search recursive
func binarySearch(arr: [Int], _ x: Int) -> Bool {
    if arr.count == 0 {return false}
    let mid = arr.count / 2
    if x < arr[mid] {
        return binarySearch(Array(arr[0..<mid]), x)
    } else if x > arr[mid] {
        return binarySearch(Array(arr[mid+1..<arr.count]), x)
    }
    return true
} 

// Binary search iterative
func binarySearchI(n: Int, _ inArr: [Int]) -> Bool {
    var arr = inArr
    var i = 0, j = arr.count - 1
    while i <= j {
        let middle = i + ((j - i) / 2)
        if n == arr[middle] {return true}
        else if n > arr[middle] {
            i = middle + 1
        } else if n < arr[middle] {
            j = middle - 1
        }
    }
    return false
}

let arr = [1,2,3,4,5,7,8,9,10]
let n = 6
print(binarySearchI(n, arr))
print(binarySearch(arr, n))
